(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{93:function(n,a,t){"use strict";t.r(a);var e=t(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"react源码解析——transaction事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react源码解析——transaction事务","aria-hidden":"true"}},[n._v("#")]),n._v(" react源码解析——transaction事务")]),n._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 详见 Transaction.js")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-------------------------------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   -----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  -------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +-----------------\x3e-----\x3e|anyMethod-------------\x3e\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n **/")]),n._v("\n")])])]),t("p",[n._v("实际上，Transacation 就是给需要执行的函数封装了两个 wrapper，每个 wrapper 都有 initialize 和 close 方法。当一个 transaction 需要执行（perform）的时候，会先调用对应的 initialize 方法。同样的，当一个 transaction 执行完成后，会调用对应的 close 方法。")]),n._v(" "),t("p",[n._v("纵观 React 源码，使用 Transaction 之处非常之多，React 源码注释中也列举了很多可以使用 Transaction 的地方，比如")]),n._v(" "),t("ul",[t("li",[n._v("在一次 DOM reconciliation（调和，即 state 改变导致 Virtual DOM 改变，计算真实 DOM 该如何改变的过程）的前后，保证 input 中选中的文字范围（range）不发生变化")]),n._v(" "),t("li",[n._v("当 DOM 节点发生重新排列时禁用事件，以确保不会触发多余的 blur/focus 事件。同时可以确保 DOM 重拍完成后事件系统恢复启用状态。")]),n._v(" "),t("li",[n._v("当 worker thread 的 DOM reconciliation 计算完成后，由 main thread 来更新整个 UI")]),n._v(" "),t("li",[n._v("在渲染完新的内容后调用所有 componentDidUpdate 的回调")]),n._v(" "),t("li",[n._v("等等")])])])}],!1,null,null,null);a.default=r.exports}}]);